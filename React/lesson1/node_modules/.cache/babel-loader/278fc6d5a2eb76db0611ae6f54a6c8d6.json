{"ast":null,"code":"var _jsxFileName = \"/home/zhynzher/Desktop/Courses/React/lesson1/src/components/App.js\";\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://swapi.co/api/people/1\").then(response => response.json()).then(data => {\n      this.setState({\n        data: data\n      });\n    });\n    this.setState({\n      loading: true\n    });\n  }\n\n  render() {\n    const text = this.state.loading ? \"Loading...\" : this.state.data.name;\n    return React.createElement(\"div\", {\n      className: \"todo-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, text);\n  }\n\n}\n\nexport default App;\n/* \n\nimport React from 'react';\nimport todo from './toDoData';\nimport ToDoItem from './ToDoItem';\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            todos: todo,\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange (id) {\n        this.setState(prevState => {\n            const updateTodos = prevState.todos.map(todo => {\n                if(todo.id === id) {\n                     todo.completed = !todo.completed\n                    }\n                return todo\n            })\n            return {updateTodos}\n        })\n    }\n    render() {\n        const todoData = this.state.todos.map(item => <ToDoItem\n                                                            key={(item.id)}\n                                                            item={item}\n                                                            handleChange = {this.handleChange}\n                                                            />)\n        return (\n            <div className=\"todo-list\">\n                {todoData}\n            </div>\n        )\n    }\n}\n\n\nexport default App\n\n\n*/","map":{"version":3,"sources":["/home/zhynzher/Desktop/Courses/React/lesson1/src/components/App.js"],"names":["React","App","Component","constructor","state","loading","data","componentDidMount","fetch","then","response","json","setState","render","text","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,KADA;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUH,IAAI,IAAI;AACV,WAAKM,QAAL,CAAc;AAACN,QAAAA,IAAI,EAAEA;AAAP,OAAd;AAEH,KALL;AAMA,SAAKM,QAAL,CAAc;AAACP,MAAAA,OAAO,EAAE;AAAV,KAAd;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKV,KAAL,CAAWC,OAAX,GAAqB,YAArB,GAAoC,KAAKD,KAAL,CAAWE,IAAX,CAAgBS,IAAjE;AACA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,IADL,CADJ;AAKH;;AA3B6B;;AA+BlC,eAAeb,GAAf;AAUA","sourcesContent":["import React from 'react';\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            loading: false,\n            data: {},\n        }\n        \n    }\n\n    componentDidMount(){\n        fetch(\"https://swapi.co/api/people/1\")\n            .then(response => response.json())\n            .then(data => {\n                this.setState({data: data\n                })\n            })\n        this.setState({loading: true})  \n    }\n\n    render() {\n        const text = this.state.loading ? \"Loading...\" : this.state.data.name\n        return (\n            <div className=\"todo-list\">\n                {text}\n            </div>\n        )\n    }\n}\n\n\nexport default App\n\n\n\n\n\n\n\n\n\n/* \n\nimport React from 'react';\nimport todo from './toDoData';\nimport ToDoItem from './ToDoItem';\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            todos: todo,\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange (id) {\n        this.setState(prevState => {\n            const updateTodos = prevState.todos.map(todo => {\n                if(todo.id === id) {\n                     todo.completed = !todo.completed\n                    }\n                return todo\n            })\n            return {updateTodos}\n        })\n    }\n    render() {\n        const todoData = this.state.todos.map(item => <ToDoItem\n                                                            key={(item.id)}\n                                                            item={item}\n                                                            handleChange = {this.handleChange}\n                                                            />)\n        return (\n            <div className=\"todo-list\">\n                {todoData}\n            </div>\n        )\n    }\n}\n\n\nexport default App\n\n\n*/"]},"metadata":{},"sourceType":"module"}