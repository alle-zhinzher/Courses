{"ast":null,"code":"var _jsxFileName = \"/home/zhynzher/Desktop/Courses/React/lesson1/src/components/App.js\";\nimport React from 'react';\nimport Conditional from './Conditional';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      login: true\n    };\n    this.toggleCondition = this.toggleCondition.bind(this);\n  }\n\n  toggleCondition() {\n    this.setState({\n      login: this.state.login ? false : true\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"todo-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Conditional, {\n      login: this.state.login,\n      togle: this.toggleCondition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;\n/* \n\nimport React from 'react';\nimport todo from './toDoData';\nimport ToDoItem from './ToDoItem';\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            todos: todo,\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange (id) {\n        this.setState(prevState => {\n            const updateTodos = prevState.todos.map(todo => {\n                if(todo.id === id) {\n                     todo.completed = !todo.completed\n                    }\n                return todo\n            })\n            return {updateTodos}\n        })\n    }\n    render() {\n        const todoData = this.state.todos.map(item => <ToDoItem\n                                                            key={(item.id)}\n                                                            item={item}\n                                                            handleChange = {this.handleChange}\n                                                            />)\n        return (\n            <div className=\"todo-list\">\n                {todoData}\n            </div>\n        )\n    }\n}\n\n\nexport default App\n\n\n*/","map":{"version":3,"sources":["/home/zhynzher/Desktop/Courses/React/lesson1/src/components/App.js"],"names":["React","Conditional","App","Component","constructor","state","login","toggleCondition","bind","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACH;;AAEDD,EAAAA,eAAe,GAAI;AACf,SAAKE,QAAL,CAAc;AAACH,MAAAA,KAAK,EAAG,KAAKD,KAAL,CAAWC,KAAX,GAAmB,KAAnB,GAAyB;AAAlC,KAAd;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,KAA/B;AACa,MAAA,KAAK,EAAE,KAAKC,eADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAOH;;AArB6B;;AAyBlC,eAAeL,GAAf;AAUA","sourcesContent":["import React from 'react';\nimport Conditional from './Conditional';\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            login: true,\n        }\n        this.toggleCondition = this.toggleCondition.bind(this);\n    }\n\n    toggleCondition () {\n        this.setState({login : this.state.login ? false:true})\n    }\n   \n    render() {\n        return (\n            <div className=\"todo-list\">\n                <Conditional login={this.state.login}\n                             togle={this.toggleCondition}\n                            />\n            </div>\n        )\n    }\n}\n\n\nexport default App\n\n\n\n\n\n\n\n\n\n/* \n\nimport React from 'react';\nimport todo from './toDoData';\nimport ToDoItem from './ToDoItem';\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            todos: todo,\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange (id) {\n        this.setState(prevState => {\n            const updateTodos = prevState.todos.map(todo => {\n                if(todo.id === id) {\n                     todo.completed = !todo.completed\n                    }\n                return todo\n            })\n            return {updateTodos}\n        })\n    }\n    render() {\n        const todoData = this.state.todos.map(item => <ToDoItem\n                                                            key={(item.id)}\n                                                            item={item}\n                                                            handleChange = {this.handleChange}\n                                                            />)\n        return (\n            <div className=\"todo-list\">\n                {todoData}\n            </div>\n        )\n    }\n}\n\n\nexport default App\n\n\n*/"]},"metadata":{},"sourceType":"module"}