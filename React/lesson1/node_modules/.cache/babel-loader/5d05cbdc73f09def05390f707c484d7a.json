{"ast":null,"code":"var _jsxFileName = \"/home/zhynzher/Desktop/Courses/React/lesson1/src/components/App.js\";\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      firstName: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      firstName: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"firsName\",\n      placeholder: \"first name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"firsName\",\n      placeholder: \"first name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.state.firstName));\n  }\n\n}\n\nexport default App;\n/* \n\nimport React from 'react';\nimport todo from './toDoData';\nimport ToDoItem from './ToDoItem';\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            todos: todo,\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange (id) {\n        this.setState(prevState => {\n            const updateTodos = prevState.todos.map(todo => {\n                if(todo.id === id) {\n                     todo.completed = !todo.completed\n                    }\n                return todo\n            })\n            return {updateTodos}\n        })\n    }\n    render() {\n        const todoData = this.state.todos.map(item => <ToDoItem\n                                                            key={(item.id)}\n                                                            item={item}\n                                                            handleChange = {this.handleChange}\n                                                            />)\n        return (\n            <div className=\"todo-list\">\n                {todoData}\n            </div>\n        )\n    }\n}\n\n\nexport default App\n\n\n\n\ncomponentDidMount(){\n        this.setState({ loading: true })\n        fetch(\"https://swapi.co/api/people/1\")\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    loading: false,\n                    data: data,\n                })\n            })\n    }\n*/","map":{"version":3,"sources":["/home/zhynzher/Desktop/Courses/React/lesson1/src/components/App.js"],"names":["React","App","Component","constructor","state","firstName","handleChange","bind","event","setState","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AACDD,EAAAA,YAAY,CAAEE,KAAF,EAAS;AACjB,SAAKC,QAAL,CAAc;AACVJ,MAAAA,SAAS,EAAEG,KAAK,CAACE,MAAN,CAAaC;AADd,KAAd;AAGH;;AACDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,WAAW,EAAC,YAA/C;AAA4D,MAAA,QAAQ,EAAE,KAAKN,YAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,WAAW,EAAC,YAA/C;AAA4D,MAAA,QAAQ,EAAE,KAAKA,YAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKF,KAAL,CAAWC,SAAhB,CAJJ,CADJ;AAQH;;AAtB6B;;AA0BlC,eAAeJ,GAAf;AAUA","sourcesContent":["import React from 'react';\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            firstName: \"\",\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange (event) {\n        this.setState({\n            firstName: event.target.value\n        })\n    }\n    render() {\n        return (\n            <form >\n                <input type=\"text\" name=\"firsName\" placeholder=\"first name\" onChange={this.handleChange}/>\n                <input type=\"text\" name=\"firsName\" placeholder=\"first name\" onChange={this.handleChange}/>\n                \n                <h1>{this.state.firstName}</h1>\n            </form>\n        )\n    }\n}\n\n\nexport default App\n\n\n\n\n\n\n\n\n\n/* \n\nimport React from 'react';\nimport todo from './toDoData';\nimport ToDoItem from './ToDoItem';\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            todos: todo,\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange (id) {\n        this.setState(prevState => {\n            const updateTodos = prevState.todos.map(todo => {\n                if(todo.id === id) {\n                     todo.completed = !todo.completed\n                    }\n                return todo\n            })\n            return {updateTodos}\n        })\n    }\n    render() {\n        const todoData = this.state.todos.map(item => <ToDoItem\n                                                            key={(item.id)}\n                                                            item={item}\n                                                            handleChange = {this.handleChange}\n                                                            />)\n        return (\n            <div className=\"todo-list\">\n                {todoData}\n            </div>\n        )\n    }\n}\n\n\nexport default App\n\n\n\n\ncomponentDidMount(){\n        this.setState({ loading: true })\n        fetch(\"https://swapi.co/api/people/1\")\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    loading: false,\n                    data: data,\n                })\n            })\n    }\n*/"]},"metadata":{},"sourceType":"module"}