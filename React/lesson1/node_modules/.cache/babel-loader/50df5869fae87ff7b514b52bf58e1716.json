{"ast":null,"code":"var _jsxFileName = \"/home/zhynzher/Desktop/Courses/React/lesson1/src/components/App.js\";\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      isTrue: true,\n      gender: \"\",\n      fawColor: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value,\n          type = _event$target.type,\n          checked = _event$target.checked;\n    type === \"checkbox\" ? this.setState({\n      [name]: checked\n    }) : this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const st = {\n      background: \"blue\"\n    };\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"firstName\",\n      placeholder: \"First name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"lastName\",\n      placeholder: \"Last name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"isTrue\",\n      checked: this.state.isTrue,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), \" Make blue? \", React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"gender\",\n      value: \"male\",\n      checked: this.state.gender === \"male\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), \"Male \", React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"gender\",\n      value: \"female\",\n      checked: this.state.gender === \"female\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), \"Female \", React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      value: this.state.fawColor,\n      onChange: this.handleChange,\n      name: \"fawColor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"3\")), React.createElement(\"h1\", {\n      style: this.state.isTrue ? st : {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.state.firstName, \" \", this.state.lastName));\n  }\n\n}\n\nexport default App;\n/* \n\nimport React from 'react';\nimport todo from './toDoData';\nimport ToDoItem from './ToDoItem';\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            todos: todo,\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange (id) {\n        this.setState(prevState => {\n            const updateTodos = prevState.todos.map(todo => {\n                if(todo.id === id) {\n                     todo.completed = !todo.completed\n                    }\n                return todo\n            })\n            return {updateTodos}\n        })\n    }\n    render() {\n        const todoData = this.state.todos.map(item => <ToDoItem\n                                                            key={(item.id)}\n                                                            item={item}\n                                                            handleChange = {this.handleChange}\n                                                            />)\n        return (\n            <div className=\"todo-list\">\n                {todoData}\n            </div>\n        )\n    }\n}\n\n\nexport default App\n\n\n\n\ncomponentDidMount(){\n        this.setState({ loading: true })\n        fetch(\"https://swapi.co/api/people/1\")\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    loading: false,\n                    data: data,\n                })\n            })\n    }\n*/","map":{"version":3,"sources":["/home/zhynzher/Desktop/Courses/React/lesson1/src/components/App.js"],"names":["React","App","Component","constructor","state","firstName","lastName","isTrue","gender","fawColor","handleChange","bind","event","target","name","value","type","checked","setState","render","st","background"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            firstName: \"\",\n            lastName: \"\",\n            isTrue: true,\n            gender: \"\",\n            fawColor: \"\",\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange (event) {\n        const { name, value, type, checked } = event.target\n        type === \"checkbox\" ? this.setState({ [name]: checked }) : this.setState({[name]: value})\n\n    }\n    \n    render() {\n        const st = {\n            background: \"blue\"\n        }\n        return (\n            <form >\n                <input type=\"text\" name=\"firstName\" placeholder=\"First name\" onChange={this.handleChange}/>\n                <input type=\"text\" name=\"lastName\" placeholder=\"Last name\" onChange={this.handleChange} />\n                <input type=\"checkbox\" name=\"isTrue\" checked={this.state.isTrue} onChange={this.handleChange} /> Make blue? <hr/>\n                <input type=\"radio\" name=\"gender\" value=\"male\" checked={this.state.gender===\"male\"} onChange={this.handleChange} />Male <hr />\n                <input type=\"radio\" name=\"gender\" value=\"female\" checked={this.state.gender===\"female\"} onChange={this.handleChange} />Female <hr />\n                <select value={this.state.fawColor} onChange={this.handleChange} name=\"fawColor\">\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                </select>\n                <h1 style={this.state.isTrue ? st: {}}>{this.state.firstName} {this.state.lastName}</h1>\n            </form>\n\n        )\n    }\n}\n\n\nexport default App\n\n\n\n\n\n\n\n\n\n/* \n\nimport React from 'react';\nimport todo from './toDoData';\nimport ToDoItem from './ToDoItem';\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            todos: todo,\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange (id) {\n        this.setState(prevState => {\n            const updateTodos = prevState.todos.map(todo => {\n                if(todo.id === id) {\n                     todo.completed = !todo.completed\n                    }\n                return todo\n            })\n            return {updateTodos}\n        })\n    }\n    render() {\n        const todoData = this.state.todos.map(item => <ToDoItem\n                                                            key={(item.id)}\n                                                            item={item}\n                                                            handleChange = {this.handleChange}\n                                                            />)\n        return (\n            <div className=\"todo-list\">\n                {todoData}\n            </div>\n        )\n    }\n}\n\n\nexport default App\n\n\n\n\ncomponentDidMount(){\n        this.setState({ loading: true })\n        fetch(\"https://swapi.co/api/people/1\")\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    loading: false,\n                    data: data,\n                })\n            })\n    }\n*/"]},"metadata":{},"sourceType":"module"}